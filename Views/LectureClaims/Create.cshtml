@model CMCS.Models.LectureClaim

@{
    ViewData["Title"] = "Create Claim";
}

<div class="container my-5">
    <h1 class="text-center text-primary mb-4">Create Claim</h1>

    <h4 class="text-secondary text-center">Lecture Claim Submission</h4>
    <hr class="mb-4" />

    <div class="row justify-content-center">
        <div class="col-md-8">
            <form enctype="multipart/form-data" asp-action="Create" class="bg-light p-4 rounded shadow">
                <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                <div class="form-group mb-3">
                    <label asp-for="LecturerName" class="form-label fw-bold"></label>
                    <input asp-for="LecturerName" class="form-control" placeholder="Enter Lecturer's Name" />
                    <span asp-validation-for="LecturerName" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label asp-for="LecturerSurname" class="form-label fw-bold"></label>
                    <input asp-for="LecturerSurname" class="form-control" placeholder="Enter Lecturer's Surname" />
                    <span asp-validation-for="LecturerSurname" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label asp-for="LecturerEmail" class="form-label fw-bold"></label>
                    <input asp-for="LecturerEmail" class="form-control" placeholder="Enter Lecturer's Email" />
                    <span asp-validation-for="LecturerEmail" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label asp-for="ClaimDate" class="form-label fw-bold"></label>
                    <input asp-for="ClaimDate" class="form-control" type="date" />
                    <span asp-validation-for="ClaimDate" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label asp-for="HoursWorked" class="form-label fw-bold"></label>
                    <input asp-for="HoursWorked" class="form-control" type="number" step="0.01" id="hoursWorked" placeholder="Enter Hours Worked" />
                    <span asp-validation-for="HoursWorked" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label asp-for="HourlyRate" class="form-label fw-bold"></label>
                    <input asp-for="HourlyRate" class="form-control" type="number" step="0.01" id="hourlyRate" placeholder="Enter Hourly Rate" />
                    <span asp-validation-for="HourlyRate" class="text-danger"></span>
                </div>

                <!-- Final Payment Display -->
                <div class="form-group mb-4">
                    <label class="form-label fw-bold">Final Payment</label>
                    <input class="form-control" type="text" id="finalPayment" readonly placeholder="Final Payment will be calculated automatically" />
                </div>

                <div class="form-group mb-4">
                    <label asp-for="ClaimDocument" class="form-label fw-bold"></label>
                    <input asp-for="ClaimDocument" class="form-control" type="file" accept=".pdf, .docx, .xlsx" />
                    <span asp-validation-for="ClaimDocument" class="text-danger"></span>
                </div>


                <div class="text-center">
                    <input type="submit" value="Create Claim" class="btn btn-primary btn-lg" />
                </div>
            </form>
        </div>
    </div>

    <div class="text-center mt-4">
        <a asp-action="ClaimsList" class="btn btn-link">View Your Claims</a>
    </div>
</div>

@section Scripts {
    @{
        // Include a partial view for validation scripts, enabling client-side validation
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        // Event listeners to trigger calculation of Final Payment whenever
        // Hours Worked or Hourly Rate fields are updated
        document.getElementById("hoursWorked").addEventListener("input", calculateFinalPayment);
        document.getElementById("hourlyRate").addEventListener("input", calculateFinalPayment);

        // Function to calculate Final Payment
        function calculateFinalPayment() {
            // Retrieve values from Hours Worked and Hourly Rate input fields
            const hoursWorked = parseFloat(document.getElementById("hoursWorked").value) || 0;
            const hourlyRate = parseFloat(document.getElementById("hourlyRate").value) || 0;

            // Calculate the final payment as a product of Hours Worked and Hourly Rate
            const finalPayment = hoursWorked * hourlyRate;

            // Display the calculated final payment in the Final Payment field
            // Use toFixed(2) to ensure the value is displayed with two decimal places
            document.getElementById("finalPayment").value = finalPayment.toFixed(2);
        }
    </script>
}
